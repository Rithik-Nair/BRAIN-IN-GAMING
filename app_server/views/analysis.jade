doctype html
html
  head
    title Game Analysis
    script(src="https://cdn.jsdelivr.net/npm/chart.js")
    script(src="https://cdn.jsdelivr.net/npm/justgage")
    style.
      body {
        font-family: 'Arial', sans-serif;
        background-color: #f4f7f6;
        color: #333;
        padding: 0;
        margin: 0;
      }

      #analysis-container {
        max-width: 1200px;
        margin: 40px auto;
        padding: 20px;
        background-color: #fff;
        box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);
        border-radius: 10px;
      }

      .box {
        margin-bottom: 40px;
        border-radius: 8px;
        padding: 25px;
        background-color: #fafafa;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
      }

      .box h2 {
        font-size: 24px;
        margin-bottom: 15px;
        color: #444;
      }

      .real-time-data {
        font-size: 20px;
        font-weight: bold;
        color: #4caf50;
        padding: 15px;
        background-color: #e8f5e9;
        border-radius: 5px;
        text-align: center;
      }

      button {
        padding: 12px 25px;
        background-color: #4caf50;
        color: #fff;
        border: none;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s;
      }

      button:hover {
        background-color: #45a049;
      }

  body
    h1 Game Analysis

    #analysis-container
      .box
        h2 Emotional States
        canvas#emotionLineGraph(width="400", height="250")
        p This chart shows the emotional levels at different phases of the game.

      .box
        h2 Brain Wave Activity Intensity
        canvas#brainWaveBarChart(width="400", height="250")
        p This bar chart represents the intensity of different brain wave activities.

      .box
        h2 Focus Level and Memory Recall Activity
        canvas#focusRadarChart(width="400", height="250")
        p This radar chart illustrates the focus and memory recall levels during the game.

      .box
        h2 Scatter Plot (Brain Activity)
        canvas#scatterPlot(width="400", height="250")
        p This scatter plot visualizes the relationship between different brain activity points.
        h3 Scatter Plot Analysis
        p X-axis: Brain Activity Metric, Y-axis: Intensity of Activity


      button(onclick="goHome()") Back to Home

    script.
      // Sample Data for Emotional States
      const sampleEmotionalStates = {
        labels: ['Start', 'Mid-Game', 'End'],
        values: [50, 70, 90] // Sample emotional levels (in percentage)
      };

      // Sample Data for Brain Wave Activity
      const sampleBrainWaveActivity = {
        labels: ['Alpha', 'Beta', 'Theta', 'Delta'],
        values: [20, 50, 30, 10]
      };

      // Sample Data for Focus and Memory Recall
      const sampleFocusMemoryData = {
        labels: ['Attention', 'Memory', 'Recall', 'Concentration'],
        values: [80, 60, 90, 70]
      };

      // Sample Data for Scatter Plot
      const scatterPlotData = {
        labels: ['Point 1', 'Point 2', 'Point 3', 'Point 4'],
        x: [20, 50, 70, 90],
        y: [30, 60, 80, 100]
      };

      // Initialize WebSocket connection
      function connectWebSocket() {
        const socket = new WebSocket('ws://your-server-url'); // Replace with your WebSocket server URL

        socket.onopen = () => {
          console.log('WebSocket connection established.');
        };

        socket.onmessage = (event) => {
          try {
            const liveData = JSON.parse(event.data); // Parse the received data
            console.log('Live BCI Data:', liveData);

            // Update all visualizations here
            updateVisualizations(liveData);
          } catch (error) {
            console.error('Error parsing WebSocket message:', error);
          }
        };

        socket.onclose = () => {
          console.warn('WebSocket connection closed. Reconnecting...');
          setTimeout(connectWebSocket, 5000); // Attempt to reconnect after 5 seconds
        };

        socket.onerror = (error) => {
          console.error('WebSocket error:', error);
        };
      }

      // Function to update all visualizations
      function updateVisualizations(liveData) {
        // Update Emotional States Line Graph
        if (emotionLineGraph) {
          emotionLineGraph.data.labels = liveData.emotionalStates.labels;
          emotionLineGraph.data.datasets[0].data = liveData.emotionalStates.values;
          emotionLineGraph.update();
        }

        // Update Brain Wave Activity Bar Chart
        if (brainWaveBarChart) {
          brainWaveBarChart.data.labels = liveData.brainWaveActivity.labels;
          brainWaveBarChart.data.datasets[0].data = liveData.brainWaveActivity.values;
          brainWaveBarChart.update();
        }

        // Update Focus and Memory Radar Chart
        if (focusRadarChart) {
          focusRadarChart.data.labels = liveData.focusMemory.labels;
          focusRadarChart.data.datasets[0].data = liveData.focusMemory.values;
          focusRadarChart.update();
        }

        // Update Scatter Plot
        if (scatterPlot) {
          scatterPlot.data.labels = liveData.scatterPlot.labels;
          scatterPlot.data.datasets[0].data = liveData.scatterPlot.data;
          scatterPlot.update();
        }

        // Update Real-Time Monitoring Text
        document.getElementById('realTimeData').innerText = liveData.realTimeMessage || 'Data is coming in...';
      }

      // Initialize visualizations
      let emotionLineGraph, brainWaveBarChart, focusRadarChart, scatterPlot;

      window.onload = () => {
        connectWebSocket(); // Establish WebSocket connection

        // Initialize Emotional States Line Graph
        const emotionCtx = document.getElementById('emotionLineGraph').getContext('2d');
        emotionLineGraph = new Chart(emotionCtx, {
          type: 'line',
          data: { labels: sampleEmotionalStates.labels, datasets: [{ label: 'Emotion Levels', data: sampleEmotionalStates.values, borderColor: '#FF5733', borderWidth: 2 }] },
          options: { responsive: true, scales: { y: { beginAtZero: true, title: { display: true, text: 'Emotion Level (%)' } }, x: { title: { display: true, text: 'Game Phase' } } }, plugins: { tooltip: { enabled: true } } }
        });

        // Initialize Brain Wave Activity Bar Chart
        const brainWaveCtx = document.getElementById('brainWaveBarChart').getContext('2d');
        brainWaveBarChart = new Chart(brainWaveCtx, {
          type: 'bar',
          data: { labels: sampleBrainWaveActivity.labels, datasets: [{ label: 'Brain Wave Activity', data: sampleBrainWaveActivity.values, backgroundColor: 'rgba(54, 162, 235, 0.2)', borderColor: 'rgba(54, 162, 235, 1)', borderWidth: 2 }] },
          options: { responsive: true, scales: { y: { beginAtZero: true, title: { display: true, text: 'Activity Level' } }, x: { title: { display: true, text: 'Wave Type' } } }, plugins: { tooltip: { enabled: true } } }
        });

        // Initialize Focus and Memory Recall Radar Chart
        const focusRadarCtx = document.getElementById('focusRadarChart').getContext('2d');
        focusRadarChart = new Chart(focusRadarCtx, {
          type: 'radar',
          data: { labels: sampleFocusMemoryData.labels, datasets: [{ label: 'Focus & Memory', data: sampleFocusMemoryData.values, borderColor: '#FF5733', backgroundColor: 'rgba(255, 99, 132, 0.2)', borderWidth: 2 }] },
          options: { responsive: true, plugins: { tooltip: { enabled: true } } }
        });

        // Initialize Scatter Plot
        const scatterCtx = document.getElementById('scatterPlot').getContext('2d');
        scatterPlot = new Chart(scatterCtx, {
          type: 'scatter',
          data: {
            labels: scatterPlotData.labels,
            datasets: [{
              label: 'Brain Activity',
              data: scatterPlotData.x.map((x, index) => ({ x: x, y: scatterPlotData.y[index] })),
              backgroundColor: 'rgba(255, 99, 132, 0.6)',
            }]
          },
          options: { responsive: true, scales: { x: { title: { display: true, text: 'Brain Activity Metric' } }, y: { title: { display: true, text: 'Activity Intensity' } } }, plugins: { tooltip: { enabled: true } } }
        });
      };

      function goHome() {
        window.location.href = '/';
      }
