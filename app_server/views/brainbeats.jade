doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Brain Beats
    style.
      /* Button styles */
      button.pad {
        color: #fff;
        border: none;
        border-radius: 8px;
        padding: 30px 40px;
        font-size: 18px;
        cursor: pointer;
        transition: background 0.3s ease;
      }

      /* Individual colors for each pad */
      .kick {
        background: #ff5722;
      }

      .snare {
        background: #009688;
      }

      .hihat {
        background: #3f51b5;
      }

      .clap {
        background: #ffeb3b;
      }

      .bass {
        background: #8bc34a;
      }

      .bassdrop {
        background: #f44336; /* Red */
      }

      .riser {
        background: #9c27b0; /* Purple */
      }

      .dubstep {
        background: #607d8b; /* Blue-grey */
      }

      .build {
        background: #ff9800; /* Orange */
      }

      /* Hover effect for buttons */
      button.pad:hover {
        background: #ff9800;
      }

      /* Active effect when button is clicked */
      button.pad:active {
        background: #e64a19;
      }

      /* General body styles */
      body {
        font-family: Arial, sans-serif;
        text-align: center;
        background: #f0f0f0;  /* Light background for testing */
        color: #000;  /* Dark text for visibility */
        margin: 0;
        padding: 20px;
      }

      /* Drum pad container */
      #drum-pad {
        display: grid;
        grid-template-columns: repeat(3, 1fr); /* 3 columns */
        gap: 15px;
        justify-content: center;
        margin-top: 20px;
      }

      /* Back button style */
      button.back {
        color: #fff;
        background: #607d8b; /* Blue-grey */
        border: none;
        border-radius: 8px;
        padding: 15px 25px;
        font-size: 18px;
        cursor: pointer;
        transition: background 0.3s ease;
        margin-bottom: 20px;
      }

      button.back:hover {
        background: #3e4a52;
      }

      /* Concentration meter styles */
      #concentration-meter-container {
        margin-top: 20px;
        text-align: center;
      }

      #concentration-meter {
        width: 100%;
        max-width: 500px;
        height: 25px;
        background: #ddd;
        border-radius: 12px;
        overflow: hidden;
        margin: 0 auto;
      }

      #concentration-bar {
        height: 100%;
        width: 0;
        background: #4caf50; /* Green */
        transition: width 0.5s ease;
      }

      #concentration-level {
        margin-top: 10px;
        font-size: 18px;
        font-weight: bold;
      }

  body
    h1 Brain Beats
    button.back(onclick="window.location.href='/'") Back to Home

    div#concentration-meter-container
      div#concentration-meter
        div#concentration-bar
      div#concentration-level Concentration: 0%

    div#drum-pad
      button.pad.kick(data-sound="kick") Kick
      button.pad.snare(data-sound="snare") Snare
      button.pad.hihat(data-sound="hihat") Hi-Hat
      button.pad.clap(data-sound="clap") Clap
      button.pad.bass(data-sound="bass") Bass
      button.pad.bassdrop(data-sound="bassdrop") Bass Drop
      button.pad.riser(data-sound="riser") Riser
      button.pad.dubstep(data-sound="dubstep") Dubstep
      button.pad.build(data-sound="build") Build

    script.
      // List of DJ-related sounds and corresponding button classes
      const soundMapping = {
        kick: "/sounds/kick.mp3",
        snare: "/sounds/snare.mp3",
        hihat: "/sounds/hihat.mp3",
        clap: "/sounds/clap.mp3",
        bass: "/sounds/bass.mp3",
        bassdrop: "/sounds/bassdrop.mp3",
        riser: "/sounds/riser.mp3",
        dubstep: "/sounds/dubstep.mp3",
        build: "/sounds/build.mp3"
      };

      // Add event listeners to all buttons
      const pads = document.querySelectorAll(".pad");
      const concentrationBar = document.getElementById("concentration-bar");
      const concentrationLevel = document.getElementById("concentration-level");
      let concentrationScore = 0;

      pads.forEach(pad => {
        pad.addEventListener("click", () => {
          const sound = soundMapping[pad.getAttribute("data-sound")];
          if (sound) {
            const audio = new Audio(sound);
            audio.play();
          }

          // Update concentration score
          concentrationScore += 10;
          if (concentrationScore > 100) {
            concentrationScore = 100;
          }
          updateConcentrationMeter();

          // Decrease concentration over time
          setTimeout(() => {
            concentrationScore -= 5;
            if (concentrationScore < 0) {
              concentrationScore = 0;
            }
            updateConcentrationMeter();
          }, 1000);
        });
      });

      // Function to update the concentration meter
      function updateConcentrationMeter() {
        concentrationBar.style.width = concentrationScore + "%";
        concentrationLevel.textContent = `Concentration: ${concentrationScore}%`;
      }
